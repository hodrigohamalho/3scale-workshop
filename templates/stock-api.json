{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "iconClass": "icon-jboss",
            "description": "Application template for JBoss Data Virtualization 6.3 services built using S2I.",
            "tags": "jdv,datavirt,jboss,xpaas",
            "version": "1.4.0",
            "openshift.io/display-name": "Red Hat JBoss Data Virtualization 6.3 (no SSL)"
        },
        "name": "stock-api"
    },
    "labels": {
        "template": "stock-api",
        "xpaas": "1.4.0"
    },
    "message": "A new data service has been created in your project.  The username/password for accessing the service is ${TEIID_USERNAME}/${TEIID_PASSWORD}.  Please be sure to create the \"${SERVICE_ACCOUNT_NAME}\" service account and the secret named ${CONFIGURATION_NAME} containing the datasource configuration details required by the deployed VDB(s).",
    "parameters": [
        {
            "description": "The name for the application.",
            "displayName": "Application Name",
            "name": "APPLICATION_NAME",
            "value": "stock-api",
            "required": true
        },
        {
            "description": "The name of the secret containing configuration properties for the data sources.",
            "displayName": "Configuration Secret Name",
            "name": "CONFIGURATION_NAME",
            "value": "datavirt-app-config",
            "required": true
        },
        {
            "description": "Specify a custom hostname for the http route.  Leave blank to use default hostname, e.g.: <service-name>-<project>.<default-domain-suffix>",
            "displayName": "Custom http Route Hostname",
            "name": "HOSTNAME_HTTP",
            "value": "stock-api.3scale1.rhtechofficelatam.com",
            "required": false
        },
        {
            "description": "The URL of the repository with your application source code.",
            "displayName": "Git Repository URL",
            "name": "SOURCE_REPOSITORY_URL",
            "value": "https://github.com/pszuster/3ScaleTD",
            "required": true
        },
        {
            "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
            "displayName": "Git Reference",
            "name": "SOURCE_REPOSITORY_REF",
            "value": "v2.0",
            "required": false
        },
        {
            "description": "Set this to the relative path to your project if it is not in the root of your repository.",
            "displayName": "Context Directory",
            "name": "CONTEXT_DIR",
            "value": "Stock/app",
            "required": false
        },
        {
            "description": "The name of the service account to use for the deployment.  The service account should be configured to allow usage of the secret specified by CONFIGURATION_NAME.",
            "displayName": "Service Account Name",
            "name": "SERVICE_ACCOUNT_NAME",
            "value": "datavirt-service-account",
            "required": true
        },
        {
            "description": "Username associated with Teiid data service.",
            "displayName": "Teiid Username",
            "name": "TEIID_USERNAME",
            "value": "teiidUser"
        },
        {
            "description": "Password for Teiid user.",
            "displayName": "Teiid User Password",
            "name": "TEIID_PASSWORD",
            "value": "jboss#1!"
        },
        {
            "description": "Username associated with ModeShape.",
            "displayName": "ModeShape Username",
            "name": "MODESHAPE_USERNAME",
            "from": "[\\a]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Password for ModeShape user.",
            "displayName": "ModeShape User Password",
            "name": "MODESHAPE_PASSWORD",
            "from": "[\\a\\A]{8}[\\d]{1}[\\A]{1}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "A secret string used to configure the GitHub webhook.",
            "displayName": "Github Webhook Secret",
            "name": "GITHUB_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "A secret string used to configure the Generic webhook.",
            "displayName": "Generic Webhook Secret",
            "name": "GENERIC_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "displayName": "ImageStream Namespace",
            "name": "IMAGE_STREAM_NAMESPACE",
            "value": "openshift",
            "required": true
        },
        {
            "description": "Password used by JGroups to authenticate nodes in the cluster.",
            "displayName": "JGroups Cluster Password",
            "name": "JGROUPS_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Controls whether exploded deployment content should be automatically deployed",
            "displayName": "Deploy Exploded Archives",
            "name": "AUTO_DEPLOY_EXPLODED",
            "value": "false",
            "required": false
        },
        {
            "description": "Comma delimited list of source directories containing VDBs for deployment",
            "displayName": "VDB Deployment Directories",
            "name": "VDB_DIRS",
            "value": "",
            "required": false
        },
        {
            "displayName": "Maven mirror URL",
            "description": "Maven mirror to use for S2I builds",
            "name": "MAVEN_MIRROR_URL",
            "value": "",
            "required": false
        },
        {
            "displayName": "Artifact Directories",
            "description": "List of directories from which archives will be copied into the deployment folder. If unspecified, all archives in /target will be copied.",
            "name": "ARTIFACT_DIR",
            "value": "",
            "required": false
        },
	{
            "description": "DB Service Name1",
            "name": "DATABASE_SERVICE_NAME1",
            "value": "stockmysql",
            "required": true
        },
        {
            "description": "DB Service Name2",
            "name": "DATABASE_SERVICE_NAME2",
            "value": "stockpg",
            "required": true
        }
    ],
    "objects": [

{
  "apiVersion": "v1",
  "kind": "ConfigMap",
  "metadata": {
    "name": "create-db1"
  },
  "data": {
    "create_db.sql": "CREATE TABLE stock (productid int(11),amount double); INSERT INTO stock(productid,amount) VALUES(1,20),(2,30),(3,1),(4,14),(5,22),(6,880),(7,1200),(8,532),(9,10),(10,1); "
  }
},
{
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME1}"
      },
      "stringData" : {
        "database-user" : "admin",
        "database-password" : "password",
        "database-root-password" : "password"
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME1}",
        "creationTimestamp": null
      },
      "spec": {
        "ports": [
          {
            "name": "mysql",
            "protocol": "TCP",
            "port": 3306,
            "targetPort": 3306,
            "nodePort": 0
          }
        ],
        "selector": {
          "name": "${DATABASE_SERVICE_NAME1}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      },
      "status": {
        "loadBalancer": {}
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME1}",
        "creationTimestamp": null
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${DATABASE_SERVICE_NAME1}"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "name": "${DATABASE_SERVICE_NAME1}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "mysql",
                "image": "mysql/mysql-server:5.7",
                "ports": [
                  {
                    "containerPort": 3306,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 5,
                  "exec": {
                    "command": [ "/bin/sh", "-i", "-c",
                      "MYSQL_PWD=\"$MYSQL_PASSWORD\" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'"]
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 30,
                  "tcpSocket": {
                    "port": 3306
                  }
                },
                "env": [
                  {
                    "name": "MYSQL_USER",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${DATABASE_SERVICE_NAME1}",
                        "key" : "database-user"
                      }
                    }
                  },
                  {
                    "name": "MYSQL_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${DATABASE_SERVICE_NAME1}",
                        "key" : "database-password"
                      }
                    }
                  },
                  {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${DATABASE_SERVICE_NAME1}",
                        "key" : "database-root-password"
                      }
                    }
                  },
                  {
                    "name": "MYSQL_DATABASE",
                    "value": "RHMart"
                  }
                ],
                "volumeMounts": [
                  
		  {
                    "name": "create-db-vol",
                    "mountPath": "/docker-entrypoint-initdb.d"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "imagePullPolicy": "IfNotPresent",
                "capabilities": {},
                "securityContext": {
                  "capabilities": {},
                  "privileged": false
                }
              }
            ],
            "volumes": [

		{
                "name": "create-db-vol",
		"configMap":{
			"name":"create-db1",
			"items":[{
			"key": "create_db.sql",
			"path": "create_db.sql"}]
			}
                }
            ],
            "restartPolicy": "Always",
            "dnsPolicy": "ClusterFirst"
          }
        }
      },
      "status": {}
    },
{
  "apiVersion": "v1",
  "kind": "ConfigMap",
  "metadata": {
    "name": "create-db-pg"
  },
  "data": {
    "create_db.sql": "CREATE TABLE public.stock\n(\n  productid integer,\n amount double precision); INSERT INTO stock (productid,amount) VALUES (1,30),(2,14),(3,40),(4,100),(5,2),(6,10),(7,32),(8,1),(9,123),(10,730);"
  }
},
{
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME2}"
      },
      "stringData" : {
        "database-user" : "admin",
        "database-password" : "password"
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME2}",
        "creationTimestamp": null
      },
      "spec": {
        "ports": [
          {
            "name": "postgresql",
            "protocol": "TCP",
            "port": 5432,
            "targetPort": 5432,
            "nodePort": 0
          }
        ],
        "selector": {
          "name": "${DATABASE_SERVICE_NAME2}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      },
      "status": {
        "loadBalancer": {}
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME2}",
        "creationTimestamp": null
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${DATABASE_SERVICE_NAME2}"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "name": "${DATABASE_SERVICE_NAME2}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "postgresql",
                "image": "postgres:9.3",
                "ports": [
                  {
                    "containerPort": 5432,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 5,
                  "exec": {
                    "command": [ "/bin/sh", "-i", "-c", "psql -h 127.0.0.1 -U $POSTGRES_USER -q -d $POSTGRES_DB -c 'SELECT 1'"]
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 30,
                  "tcpSocket": {
                    "port": 5432
                  }
                },
                "env": [
                  {
                    "name": "POSTGRES_USER",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${DATABASE_SERVICE_NAME2}",
                        "key" : "database-user"
                      }
                    }
                  },
                  {
                    "name": "POSTGRES_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${DATABASE_SERVICE_NAME2}",
                        "key" : "database-password"
                      }
                    }
                  },
                  {
                    "name": "POSTGRES_DB",
                    "value": "RHMart"
                  }
                ],
                "volumeMounts": [
                  {
                    "name": "${DATABASE_SERVICE_NAME2}-data",
                    "mountPath": "/var/lib/pgsql/data"
                  },
		  {
                    "name": "create-db-vol2",
                    "mountPath": "/docker-entrypoint-initdb.d"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "imagePullPolicy": "IfNotPresent",
                "capabilities": {},
                "securityContext": {
                  "capabilities": {},
                  "privileged": false
                }
              }
            ],
            "volumes": [
              {
                "name": "${DATABASE_SERVICE_NAME2}-data",
                "emptyDir": {
                  "medium": ""
                }
              },
		{
                "name": "create-db-vol2",
		"configMap":{
			"name":"create-db-pg",
			"items":[{
			"key": "create_db.sql",
			"path": "create_db.sql"}]
		}
                }
            ],
            "restartPolicy": "Always",
            "dnsPolicy": "ClusterFirst"
          }
        }
      },
      "status": {}
    },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "port": 8080,
                        "targetPort": "http"
                    },
                    {
                        "name": "jdbc",
                        "port": 31000,
                        "targetPort": "jdbc"
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The data virtualization services."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's http (REST) service."
                }
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "port": {
                    "targetPort": "http"
                },
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                    },
                    "contextDir": "${CONTEXT_DIR}"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "forcePull": true,
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}",
                            "name": "jboss-datavirt63-openshift:1.2"
                        },
                        "env": [
                            {
                                "name": "MAVEN_MIRROR_URL",
                                "value": "${MAVEN_MIRROR_URL}"
                            },
                            {
                                "name": "CUSTOM_INSTALL_DIRECTORIES",
                                "value": "extensions/*"
                            },
                            {
                                "name": "VDB_DIRS",
                                "value": "${VDB_DIRS}"
                            },
                            {
                                "name": "ARTIFACT_DIR",
                                "value": "${ARTIFACT_DIR}"
                            }
                        ]
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "triggers": [
                    {
                        "type": "GitHub",
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "Generic",
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "jboss-datagrid65-client-openshift:1.0"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${APPLICATION_NAME}:latest"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "serviceAccountName": "${SERVICE_ACCOUNT_NAME}",
                        "terminationGracePeriodSeconds": 60,
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}",
                                "image": "${APPLICATION_NAME}",
                                "imagePullPolicy": "Always",
                                "volumeMounts": [
                                    {
                                        "name": "configuration",
                                        "mountPath": "/etc/datavirt-environment",
                                        "readOnly": true
                                    }
                                ],
                                "ports": [
                                    {
                                        "name": "jolokia",
                                        "containerPort": 8778,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "jdbc",
                                        "containerPort": 31000,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "ping",
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_LABELS",
                                        "value": "application=${APPLICATION_NAME}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JGROUPS_CLUSTER_PASSWORD",
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "AUTO_DEPLOY_EXPLODED",
                                        "value": "${AUTO_DEPLOY_EXPLODED}"
                                    },
                                    {
                                        "name": "TEIID_USERNAME",
                                        "value": "${TEIID_USERNAME}"
                                    },
                                    {
                                        "name": "TEIID_PASSWORD",
                                        "value": "${TEIID_PASSWORD}"
                                    },
                                    {
                                        "name": "MODESHAPE_USERNAME",
                                        "value": "${MODESHAPE_USERNAME}"
                                    },
                                    {
                                        "name": "MODESHAPE_PASSWORD",
                                        "value": "${MODESHAPE_PASSWORD}"
                                    },
                                    {
                                        "name": "ENV_FILES",
                                        "value": "/etc/datavirt-environment/*"
                                    }
                                ]
                            }
                        ],
                        "volumes": [
                            {
                                "name": "configuration",
                                "secret": {
                                    "secretName": "${CONFIGURATION_NAME}"
                                }
                            }
                        ]
                    }
                }
            }
        }
    ]
}
